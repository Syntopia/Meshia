// Contains p, mv, inverse(mv), transpose(inv(mv)) = normalmatrix
uniform mat4 pmvMatrix[4]; 
uniform vec2 fov;
in vec4 vertex;
out vec3 dir;
out vec3 eye;

// Following Rrrola's boxplorer.
float fov2scale(float fov){
	return tan(radians(fov/2.0));
}

void main(void)
{
	gl_Position =vertex;
	float fov_y = fov2scale(fov.y);
	float fov_x = fov_y * (fov.x/fov.y);
		
	eye=(pmvMatrix[1][3]).xyz;
	dir=vec3(transpose(pmvMatrix[1])*vec4(vertex.x*fov_x,vertex.y*fov_y,-1.0,0));
}

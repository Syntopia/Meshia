// Contains p, mv, inverse(mv), transpose(inv(mv)) = normalmatrix
uniform mat4 pmvMatrix[4]; 
uniform float fov_y_scale;
uniform float aspect;

in vec4 vertex;

out vec3 dir;
out vec3 centerDir;
out vec3 eye;

void main(void)
{
	gl_Position =vertex;
	mat4 mv = pmvMatrix[1];
	
	// The ModelView matrix (stored in pmvMatrix[1]) is layouted as follows:
	// [  r.x  r.y  r.z q.x ]
	// [  u.x  u.y  u.z q.y ]
	// [ -f.x -f.y -f.z q.z ]
	// [    0    0    0   1 ]
	
	// Get the 'encoded' position (q), and transform to world space
	eye=-vec3(vec4(mv[3].xyz,0)*mv);
	dir=vec3(vec4(vertex.x*fov_y_scale*aspect,vertex.y*fov_y_scale,-1.0,0)*mv);
	centerDir = vec3(vec4(0,0,-1.0,0)*mv);
}
